{"ast":null,"code":"import _defineProperty from \"/Users/seong-gidong/react/test_02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/seong-gidong/react/test_02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/seong-gidong/react/test_02/src/EventPractice.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nconst EventPracitce = () => {\n  const _useState = useState({\n    message: '',\n    username: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        form = _useState2[0],\n        setForm = _useState2[1];\n\n  const username = form.username,\n        message = form.message;\n\n  const onChange = e => {\n    const nextForm = _objectSpread({}, form, {\n      //기존의 form 이자리에 복사\n      [e.target.name]: e.target.value //원하는 값을 덮어 씌우기\n\n    });\n\n    setForm(nextForm);\n  };\n\n  const onClick = () => {\n    alert(username + ' : ' + message);\n    setForm({\n      username: '',\n      message: ''\n    });\n  };\n\n  const onKeyPress = e => {\n    if (e.key == 'Enter') {\n      onClick();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\uC774\\uBCA4\\uD2B8 \\uC5F0\\uC2B5\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"\\uC0AC\\uC6A9\\uC790\\uBA85\",\n    value: username,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    placeholder: \"\\uC544\\uBB34\\uAC70\\uB098 \\uC785\\uB825\\uD574 \\uBCF4\\uC138\\uC694\",\n    onKeyPress: onKeyPress,\n    value: message,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\uD655\\uC778\"));\n};\n\nexport default EventPracitce;","map":{"version":3,"sources":["/Users/seong-gidong/react/test_02/src/EventPractice.js"],"names":["React","useState","EventPracitce","message","username","form","setForm","onChange","e","nextForm","target","name","value","onClick","alert","onKeyPress","key"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBAEHD,QAAQ,CAAC;AAChCE,IAAAA,OAAO,EAAG,EADsB;AAEhCC,IAAAA,QAAQ,EAAG;AAFqB,GAAD,CAFL;AAAA;AAAA,QAEpBC,IAFoB;AAAA,QAEdC,OAFc;;AAAA,QAMnBF,QANmB,GAMEC,IANF,CAMnBD,QANmB;AAAA,QAMTD,OANS,GAMEE,IANF,CAMTF,OANS;;AAO3B,QAAMI,QAAQ,GAAGC,CAAC,IAAI;AACrB,UAAMC,QAAQ,qBACVJ,IADU;AACJ;AACT,OAACG,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE,KAFb,CAEmB;;AAFnB,MAAd;;AAIAN,IAAAA,OAAO,CAACG,QAAD,CAAP;AACA,GAND;;AAQA,QAAMI,OAAO,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAACV,QAAQ,GAAG,KAAX,GAAmBD,OAApB,CAAL;AACAG,IAAAA,OAAO,CAAC;AACPF,MAAAA,QAAQ,EAAG,EADJ;AAEPD,MAAAA,OAAO,EAAG;AAFH,KAAD,CAAP;AAIA,GAND;;AAOA,QAAMY,UAAU,GAAGP,CAAC,IAAI;AACvB,QAAGA,CAAC,CAACQ,GAAF,IAAS,OAAZ,EAAoB;AACnBH,MAAAA,OAAO;AACP;AACD,GAJD;;AAMA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADD,EAEC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,UAFN;AAGC,IAAA,WAAW,EAAC,0BAHb;AAIC,IAAA,KAAK,EAAET,QAJR;AAKC,IAAA,QAAQ,EAAEG,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EASC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,SAFN;AAGC,IAAA,WAAW,EAAC,gEAHb;AAIC,IAAA,UAAU,EAAEQ,UAJb;AAKC,IAAA,KAAK,EAAEZ,OALR;AAMC,IAAA,QAAQ,EAAEI,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,EAiBC;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBD,CADD;AAsBA,CAlDD;;AAoDA,eAAeX,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst EventPracitce = () => {\n\n\tconst [form, setForm] = useState({\n\t\tmessage : '',\n\t\tusername : ''\n\t});\n\tconst { username, message} = form;\n\tconst onChange = e => {\n\t\tconst nextForm = {\n\t\t\t...form, //기존의 form 이자리에 복사\n\t\t\t[e.target.name]: e.target.value //원하는 값을 덮어 씌우기\n\t\t};\n\t\tsetForm(nextForm);\n\t}\n\n\tconst onClick = () => {\n\t\talert(username + ' : ' + message);\n\t\tsetForm({\n\t\t\tusername : '',\n\t\t\tmessage : ''\n\t\t})\n\t};\n\tconst onKeyPress = e => {\n\t\tif(e.key == 'Enter'){\n\t\t\tonClick();\n\t\t}\n\t};\n\t\n\treturn(\n\t\t<div>\n\t\t\t<h1>이벤트 연습</h1>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"username\"\n\t\t\t\tplaceholder=\"사용자명\"\n\t\t\t\tvalue={username}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"message\"\n\t\t\t\tplaceholder=\"아무거나 입력해 보세요\"\n\t\t\t\tonKeyPress={onKeyPress}\n\t\t\t\tvalue={message}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<button onClick={onClick}>확인</button>\n\t\t</div>\n\t);\n\n}\n\nexport default EventPracitce;"]},"metadata":{},"sourceType":"module"}