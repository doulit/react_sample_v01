{"ast":null,"code":"import _slicedToArray from \"/Users/seong-gidong/react/react_sample_v01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/seong-gidong/react/react_sample_v01/src/App.js\";\nimport React, { Component, useState } from 'react'; // import logo from './logo.svg';\n\nimport MyComponent from './sample/MyComponent';\nimport Counter from './sample/Counter';\nimport Say from './sample/Say';\nimport EventPractice from './sample/EventPractice';\nimport ValidationSample from './sample/ValidationSample';\nimport RefSample from './sample/RefSample';\nimport ScrollBox from './sample/ScrollBox';\nimport IterationSample from './sample/IterationSample';\nimport LifeCycleSample from './sample/LifeCycleSample';\nimport ErrorBoundary from './sample/ErrorBoundary';\nimport Info from './sample/Info'; // import './App.css';\n\nfunction getRandomColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n} // class App extends Component {\n\n\nconst App = () => {\n  // state = {\n  //   color: '#000000'\n  // }\n  const handleClick = () => {\n    this.setState({\n      color: getRandomColor()\n    });\n  }; // render(){\n\n\n  const name = 'react';\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const _useState3 = useState('#000000'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        color = _useState4[0],\n        setColor = _useState4[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"=================MyComponent=================\"), React.createElement(MyComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"=================Counter=================\"), React.createElement(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"=================Say=================\"), React.createElement(Say, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"=================EventPractice=================\"), React.createElement(EventPractice, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"=================ValidationSample=================\"), React.createElement(ValidationSample, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"=================ScrollBox=================\"), React.createElement(ScrollBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"=================IterationSample=================\"), React.createElement(IterationSample, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"=================LifeCycleSample=================\"), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"\\uB79C\\uB364\\uC0C9\\uC0C1\"), React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(LifeCycleSample, {\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"=================Info=================\"), React.createElement(\"button\", {\n    onClick: () => {\n      setVisible(!visible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, visible ? '숨기기' : '보이기'), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), visible && React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })); // }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/seong-gidong/react/react_sample_v01/src/App.js"],"names":["React","Component","useState","MyComponent","Counter","Say","EventPractice","ValidationSample","RefSample","ScrollBox","IterationSample","LifeCycleSample","ErrorBoundary","Info","getRandomColor","Math","floor","random","toString","App","handleClick","setState","color","name","visible","setVisible","setColor"],"mappings":"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","sourcesContent":["import React,{ Component,useState } from 'react';\n// import logo from './logo.svg';\nimport MyComponent from './sample/MyComponent';\nimport Counter from './sample/Counter';\nimport Say from './sample/Say';\nimport EventPractice from './sample/EventPractice';\nimport ValidationSample from './sample/ValidationSample';\nimport RefSample from './sample/RefSample';\nimport ScrollBox from './sample/ScrollBox';\nimport IterationSample from './sample/IterationSample';\nimport LifeCycleSample from './sample/LifeCycleSample';\nimport ErrorBoundary from './sample/ErrorBoundary';\nimport Info from './sample/Info';\n// import './App.css';\n\nfunction getRandomColor(){\n  return '#'+Math.floor(Math.random() * 16777215).toString(16);\n}\n\n// class App extends Component {\nconst App = () => {\n  \n  // state = {\n  //   color: '#000000'\n  // }\n\n  const handleClick = () => {\n    this.setState({\n      color: getRandomColor()\n    });\n  }\n\n  \n\n  // render(){\n    const name = 'react';\n    const [visible, setVisible] = useState(false);\n    const [color, setColor] = useState('#000000');\n    return(\n      <div>\n        <p>=================MyComponent=================</p>\n        <MyComponent/>        \n\n        <p>=================Counter=================</p>\n        <Counter/>\n\n        <p>=================Say=================</p>\n        <Say/>\n\n        <p>=================EventPractice=================</p>\n        <EventPractice/>\n\n        <p>=================ValidationSample=================</p>\n        <ValidationSample/>\n\n        <p>=================ScrollBox=================</p>\n        <ScrollBox/>\n\n        <p>=================IterationSample=================</p>\n        <IterationSample/>\n\n        <p>=================LifeCycleSample=================</p>\n        <button onClick={handleClick}>랜덤색상</button>\n        <ErrorBoundary>\n          <LifeCycleSample color={color}/>\n        </ErrorBoundary>\n\n        <p>=================Info=================</p>\n        <button onClick={() => {\n            setVisible(!visible);\n        }}>{visible ? '숨기기' : '보이기'}\n        </button>\n        <hr/>\n        {visible && <Info/>}\n      </div>\n    )\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}