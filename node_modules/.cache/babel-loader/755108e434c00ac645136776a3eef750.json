{"ast":null,"code":"import _slicedToArray from \"/Users/seong-gidong/react/react_sample_v01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/seong-gidong/react/react_sample_v01/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport MyComponent from './sample/MyComponent';\nimport Counter from './sample/Counter';\nimport Say from './sample/Say';\nimport EventPractice from './sample/EventPractice';\nimport ValidationSample from './sample/ValidationSample';\nimport RefSample from './sample/RefSample';\nimport ScrollBox from './sample/ScrollBox';\nimport IterationSample from './sample/IterationSample';\nimport LifeCycleSample from './sample/LifeCycleSample';\nimport ErrorBoundary from './sample/ErrorBoundary';\nimport Info from './sample/Info';\n\nfunction getRandomColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nconst App = () => {\n  // state = {\n  //   color: '#000000'\n  // }\n  // handleClick = () => {\n  //   this.setState({\n  //     color: getRandomColor()\n  //   });\n  // }\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visible = _useState2[0],\n        setVisible = _useState2[1];\n\n  const name = 'react';\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"=================Info=================\"), React.createElement(\"button\", {\n    onClick: () => {\n      setVisible(!visible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, visible ? '숨기기' : '보이기'), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), visible && React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/seong-gidong/react/react_sample_v01/src/App.js"],"names":["React","Component","useState","MyComponent","Counter","Say","EventPractice","ValidationSample","RefSample","ScrollBox","IterationSample","LifeCycleSample","ErrorBoundary","Info","getRandomColor","Math","floor","random","toString","App","visible","setVisible","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,SAASC,cAAT,GAAyB;AACvB,SAAO,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAX;AACD;;AAED,MAAMC,GAAG,GAAG,MAAM;AAEhB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAVgB,oBAYcjB,QAAQ,CAAC,KAAD,CAZtB;AAAA;AAAA,QAYTkB,OAZS;AAAA,QAYAC,UAZA;;AAchB,QAAMC,IAAI,GAAG,OAAb;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBD,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,OAAO,GAAG,KAAH,GAAW,KAFtB,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQGA,OAAO,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARd,CADF;AAYD,CA3BD;;AA6BA,eAAeD,GAAf","sourcesContent":["import React,{ Component,useState } from 'react';\nimport MyComponent from './sample/MyComponent';\nimport Counter from './sample/Counter';\nimport Say from './sample/Say';\nimport EventPractice from './sample/EventPractice';\nimport ValidationSample from './sample/ValidationSample';\nimport RefSample from './sample/RefSample';\nimport ScrollBox from './sample/ScrollBox';\nimport IterationSample from './sample/IterationSample';\nimport LifeCycleSample from './sample/LifeCycleSample';\nimport ErrorBoundary from './sample/ErrorBoundary';\nimport Info from './sample/Info';\n\nfunction getRandomColor(){\n  return '#'+Math.floor(Math.random() * 16777215).toString(16);\n}\n\nconst App = () => {\n  \n  // state = {\n  //   color: '#000000'\n  // }\n\n  // handleClick = () => {\n  //   this.setState({\n  //     color: getRandomColor()\n  //   });\n  // }\n\n  const [visible, setVisible] = useState(false);\n  \n  const name = 'react';\n  return(\n    <div>\n      \n      <p>=================Info=================</p>\n      <button onClick={() => {\n          setVisible(!visible);\n      }}>{visible ? '숨기기' : '보이기'}\n      </button>\n      <hr/>\n      {visible && <Info/>}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}